// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  body String
  comments Comment[]
}

model User{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  name String
  comments Comment[]
  likes Like[]
}

model Comment{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  message String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) //onDelete: Cascade : if we delete a user we delete all comments related
  userId String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade) //onDelete: Cascade : if we delete a post we delete all comments related
  postId String
  //default parent
  parent Comment? @relation("ParentChild", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comments Comment[] @relation("ParentChild")
  parentId String?
  likes Like[]
}

model Like{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId String
  commentId String

  //@@id([userId, commentId]) => Mongodb doesn't support compound ids
}